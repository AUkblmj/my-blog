<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>云服务器配置教程</title>
      <link href="/2024/08/29/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2024/08/29/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="云服务器配置教程"><a href="#云服务器配置教程" class="headerlink" title="云服务器配置教程"></a>云服务器配置教程</h1><blockquote><p>用户创建、免密登录即基本软件安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ssh root@公网ip</span><br><span class="line">adduser lmj</span><br><span class="line">usermod -aG <span class="built_in">sudo</span> lmj</span><br><span class="line">apt update </span><br><span class="line">apt install <span class="built_in">sudo</span> </span><br><span class="line">&lt;ctrl + d&gt;退出云服务器</span><br><span class="line"></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Host lmj</span><br><span class="line">    HostName 公网ip</span><br><span class="line">    User lmj</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">ssh-copy-id lmj或者将公钥文件id_rsa.pub内容复制到服务器~/.ssh/authorized_keys文件中。</span><br><span class="line">scp .bashrc .vimrc .tmux.conf lmj:</span><br><span class="line"></span><br><span class="line">ssh lmj</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install tmux</span><br></pre></td></tr></table></figure><blockquote><p>docker安装</p></blockquote><p>参考<a href="https://docs.docker.com/engine/install/linux-postinstall/">官方安装文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install ca-certificates curl</span><br><span class="line"><span class="built_in">sudo</span> install -m 0755 -d /etc/apt/keyrings</span><br><span class="line"><span class="built_in">sudo</span> curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> a+r /etc/apt/keyrings/docker.asc</span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.asc] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(. /etc/os-release &amp;&amp; echo <span class="string">&quot;<span class="variable">$VERSION_CODENAME</span>&quot;</span>)</span> stable&quot;</span> | \</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"><span class="built_in">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><blockquote><p>docker镜像配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker镜像下载</span></span><br><span class="line"></span><br><span class="line">scp /var/lib/acwing/docker/images/docker_lesson_1_0.tar lmj:</span><br><span class="line">ssh lmj</span><br><span class="line">docker load -i docker_lesson_1_0.tar</span><br><span class="line">docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0 </span><br><span class="line">docker attach my_docker_server</span><br><span class="line">passwd</span><br><span class="line">去阿里云开放20000端口</span><br><span class="line">ssh root@xxx.xxx.xxx.xxx -p 20000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置docker容器</span></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">ssh root@公网ip</span><br><span class="line">adduser acs</span><br><span class="line">usermod -aG <span class="built_in">sudo</span> acs</span><br><span class="line">apt update </span><br><span class="line">apt install <span class="built_in">sudo</span> </span><br><span class="line">&lt;ctrl + d&gt;退出云服务器</span><br><span class="line"></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">Host lmjd</span><br><span class="line">    HostName 公网ip</span><br><span class="line">    User acs</span><br><span class="line">    Port 20000</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">ssh-copy-id lmjd</span><br><span class="line">scp .bashrc .vimrc .tmux.conf lmjd:</span><br><span class="line"></span><br><span class="line">ssh lmjd</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install tmux</span><br><span class="line">```</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git上传超过100MB大文件</title>
      <link href="/2024/08/21/git%E4%B8%8A%E4%BC%A0%E8%B6%85%E8%BF%87100MB%E5%A4%A7%E6%96%87%E4%BB%B6/"/>
      <url>/2024/08/21/git%E4%B8%8A%E4%BC%A0%E8%B6%85%E8%BF%87100MB%E5%A4%A7%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>下载 <a href="[Releases · git-lfs/git-lfs (github.com">git-lfs</a>](<a href="https://github.com/git-lfs/git-lfs/releases?utm_source=gitlfs_site&amp;utm_medium=releases_link&amp;utm_campaign=gitlfs">https://github.com/git-lfs/git-lfs/releases?utm_source=gitlfs_site&amp;utm_medium=releases_link&amp;utm_campaign=gitlfs</a>))</p><p>进入安装后的目录，打开gitBash，执行<code>git lfs install</code></p><p>到达仓库目录，打开gitBash</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git lfs track 大文件</span><br><span class="line">git add .gitattributes</span><br><span class="line">git commit -m <span class="string">&quot;pre&quot;</span></span><br><span class="line">git remote add origin git@github.com:AUkblmj/source.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main </span><br><span class="line">git add -f 大文件</span><br><span class="line">git commit -m <span class="string">&quot;上传大文件&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>资源链接</title>
      <link href="/2024/08/20/%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5/"/>
      <url>/2024/08/20/%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><p><a href="https://fe32.top/articles/hexo1600/">基于 Hexo 从零开始搭建个人博客系列 | 唐志远 (fe32.top)</a></p><p><a href="https://fe32.top/articles/0xiipgum/">基于 Butterfly 的外挂标签引入 | 唐志远 (fe32.top)</a></p><p><a href="https://akilar.top/posts/615e2dec">Akilar 外挂标签引入</a></p><p><a href="https://butterfly.js.org/">Butterfly</a></p><p><a href="https://akilar.top/posts/3d221bf2/">Loading Animation | Akilarの糖果屋</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo搭建个人blog</title>
      <link href="/2024/08/19/%E5%9F%BA%E4%BA%8Ehexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAblog%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/"/>
      <url>/2024/08/19/%E5%9F%BA%E4%BA%8Ehexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BAblog%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>本文是一篇记录笔记，只记录主要步骤，细节问题可自行搜索</p><p>主要参考教程：<a href="https://fe32.top/articles/hexo1600/">基于 Hexo 从零开始搭建个人博客系列 | 唐志远 (fe32.top)</a></p></blockquote><h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><blockquote><p>Nvm、Nrm、Node、Hexo、Git</p></blockquote><h2 id="1-安装nvm（可选）"><a href="#1-安装nvm（可选）" class="headerlink" title="1 安装nvm（可选）"></a>1 安装nvm（可选）</h2><blockquote><p>nvm（Node Version Manager）是 Nodejs 版本管理器，它能让我们方便的对 Node.js 的版本进行切换。</p></blockquote><p><a href="https://github.com/coreybutler/nvm-windows">Windows 版</a></p><p><a href="https://github.com/jerryc127/hexo-theme-butterfly">Mac 版</a></p><h3 id="1-1-下载安装包"><a href="#1-1-下载安装包" class="headerlink" title="1.1 下载安装包"></a>1.1 下载安装包</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c48d791ea4d.png"/></div></div><h3 id="1-2-完全删除之前的node（如果之前安装过的话）"><a href="#1-2-完全删除之前的node（如果之前安装过的话）" class="headerlink" title="1.2 完全删除之前的node（如果之前安装过的话）"></a>1.2 完全删除之前的node（如果之前安装过的话）</h3><ol><li><p>卸载<a href="https://so.csdn.net/so/search?q=node&amp;spm=1001.2101.3001.7020">node</a>本身、删除nodejs目录</p><p>PS：可以在系统控制面板–&gt;所有控制面板项–&gt;程序和功能 卸载Node.js</p></li><li><p>手动删除<code>C:\Program Files\nodejs\node_modules</code>(如果你的文件是在这里的话)</p></li><li><p>手动删除<code>C:\users\</code>你的用户名<code>\node_modules</code>(如果你的文件是在这里的话)</p></li><li><p>系统环境变量PATH中有关node和nvm的</p></li></ol><h3 id="1-3-运行-nvm-setup-exe"><a href="#1-3-运行-nvm-setup-exe" class="headerlink" title="1.3 运行 nvm-setup.exe"></a>1.3 运行 nvm-setup.exe</h3><blockquote><p>文件路径可以自定义</p></blockquote><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c48f5131972.png"/></div></div><h3 id="1-4-配置nvm环境变量"><a href="#1-4-配置nvm环境变量" class="headerlink" title="1.4 配置nvm环境变量"></a>1.4 配置nvm环境变量</h3><blockquote><p> 在 <code>自定义路径/nvm</code> 路径中创建nodejs文件夹（如果想要把node放在这里的话，默认应该是<code>C:\Program Files\nodejs</code>）</p></blockquote><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c48f8a90524.png"/></div></div><blockquote><p>更改环境变量</p></blockquote><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c48fb2d9c9a.png"/></div></div><h3 id="1-5-nvm换源"><a href="#1-5-nvm换源" class="headerlink" title="1.5 nvm换源"></a>1.5 nvm换源</h3><blockquote><p><code>自定义路径/nvm/setting.txt</code> 文件末尾加入</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class="line">npm_mirror: https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c48fe3156b2.png"/></div></div><h3 id="1-6-检查nvm是否安装成功"><a href="#1-6-检查nvm是否安装成功" class="headerlink" title="1.6 检查nvm是否安装成功"></a>1.6 检查nvm是否安装成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm -v</span><br></pre></td></tr></table></figure><hr><h2 id="2-安装node（npm）"><a href="#2-安装node（npm）" class="headerlink" title="2 安装node（npm）"></a>2 安装node（npm）</h2><h3 id="2-1-安装node"><a href="#2-1-安装node" class="headerlink" title="2.1 安装node"></a>2.1 安装node</h3><blockquote><p>npm（Node Package Manager），Node.js 的包管理器，安装 Node.js 之后自带 npm，无需单独安装</p><p>方法一：通过node官网安装</p><p><a href="[Node.js — Download Node.js® (nodejs.org">node官网</a>](<a href="https://nodejs.org/en/download/package-manager">https://nodejs.org/en/download/package-manager</a>))</p><p>方法二：通过nvm安装</p><p>安装node命令及nvm常用命令如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nvm on// 启用 Node.js 版本管理</span><br><span class="line">nvm list available       // 显示可以安装的所有 Node.js 的版本</span><br><span class="line">nvm install &lt;version&gt;    // 安装指定版本，可模糊安装，例如：nvm install v6.2.0 或 nvm install 6.2</span><br><span class="line">nvm uninstall &lt;version&gt;  // 删除已安装的指定版本，语法与 install 类似</span><br><span class="line">nvm use &lt;version&gt;        // 切换使用指定的版本 node</span><br><span class="line">nvm <span class="built_in">ls</span>                   // 列出所有安装的版本（ * 指向当前使用版本）</span><br><span class="line"></span><br><span class="line">nvm off                  // 禁用 Node.js 版本管理(不卸载任何东西)</span><br><span class="line">nvm// 显示nvm其他命令（英文版）</span><br></pre></td></tr></table></figure><h3 id="2-2-检查node是否安装成功"><a href="#2-2-检查node是否安装成功" class="headerlink" title="2.2 检查node是否安装成功"></a>2.2 检查node是否安装成功</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h3 id="2-3-配置node环境变量"><a href="#2-3-配置node环境变量" class="headerlink" title="2.3 配置node环境变量"></a>2.3 配置node环境变量</h3><blockquote><p>在上文提到的nodejs目录<code>G:\AUSoftWare\nvm\nvm1.1.12\nvm\nodejs</code>中创建 <code>&quot;node_global&quot;</code> 和 <code>&quot;node_cache&quot;</code> 两个文件夹</p></blockquote><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c4901c22c96.png"/></div></div><blockquote><p> 进入 cmd 命令行，输入以下命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix G:\AUSoftWare\nvm\nvm1.1.12\nvm\nodejs\node_global</span><br><span class="line">npm config <span class="built_in">set</span> cache G:\AUSoftWare\nvm\nvm1.1.12\nvm\nodejs\node_cache</span><br></pre></td></tr></table></figure><p>设置全局模块的安装路径到 <code>&quot;node_global&quot;</code> 文件夹，<br>设置缓存到 <code>&quot;node_cache&quot;</code> 文件夹</p><blockquote><p>设置环境变量</p></blockquote><p>把 <code>G:\AUSoftWare\nvm\nvm1.1.12\nvm\nodejs\node_global</code> 加入到系统环境变量 PATH 中，方便直接使用命令行运行</p><blockquote><p>添加管理员权限</p></blockquote><p>找到先前创建的 <code>&quot;node_global&quot;</code> 和 <code>&quot;node_cache&quot;</code>两个文件夹<br>分别<code>右击</code>文件夹 —&gt; 选择<code>属性</code> —&gt; 点击<code>安全</code>，全部打勾</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c4903562d80.png"/></div></div><hr><h2 id="3-安装nrm（可选）"><a href="#3-安装nrm（可选）" class="headerlink" title="3 安装nrm（可选）"></a>3 安装nrm（可选）</h2><blockquote><p>nrm（NPM registry manager），国内使用 npm 官方源来安装包的时候比较慢，所以经常会需要修改 npm 源地址。npm 倒是提供了修改源的方法，但是 使用nrm 换源更加方便快捷。</p></blockquote><h3 id="3-1-安装nrm"><a href="#3-1-安装nrm" class="headerlink" title="3.1 安装nrm"></a>3.1 安装nrm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm   // 使用 npm 全局安装</span><br></pre></td></tr></table></figure><h3 id="3-2-nrm常用命令"><a href="#3-2-nrm常用命令" class="headerlink" title="3.2 nrm常用命令"></a>3.2 nrm常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span>// 显示全部镜像源</span><br><span class="line">nrm use taobao// 切换taobao镜像源</span><br><span class="line">nrm <span class="built_in">test</span>// 测速</span><br><span class="line">nrm -h// 查看帮助</span><br></pre></td></tr></table></figure><hr><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4 安装hexo"></a>4 安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">hexo -v// 验证是否安装成功</span><br></pre></td></tr></table></figure><hr><h2 id="5-创建GitHub仓库"><a href="#5-创建GitHub仓库" class="headerlink" title="5 创建GitHub仓库"></a>5 创建GitHub仓库</h2><p>在GitHub中创建一个名为<code>&lt;用户名&gt;.github.io</code>的仓库</p><hr><h2 id="6-连接GitHub"><a href="#6-连接GitHub" class="headerlink" title="6 连接GitHub"></a>6 连接GitHub</h2><h3 id="6-1-安装Git"><a href="#6-1-安装Git" class="headerlink" title="6.1 安装Git"></a>6.1 安装Git</h3><p><a href="[Git - Downloads (git-scm.com">Git官网下载地址</a>](<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>))</p><ul><li>Git CMD 是windows 命令行的指令风格</li><li>Git Bash 是linux系统的指令风格（建议使用）</li><li>Git GUI是图形化界面（新手学习不建议使用）</li></ul><h3 id="6-2-Git环境配置"><a href="#6-2-Git环境配置" class="headerlink" title="6.2 Git环境配置"></a>6.2 Git环境配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span> //配置用户名</span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span> //配置密码</span><br></pre></td></tr></table></figure><h3 id="6-3-GitHub的ssh配置"><a href="#6-3-GitHub的ssh配置" class="headerlink" title="6.3 GitHub的ssh配置"></a>6.3 GitHub的ssh配置</h3><p><code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></p><p>生成ssh公钥，在提示文件夹中找到<code>id_rsa.pub</code>文件，复制其内容到<code>GitHub --&gt; Settings --&gt; SSH and GPG keys --&gt; New SSH key</code>中</p><blockquote><p>注意: 要是有【Key type】的选择项 ，选择默认Authentication Key 即可。</p></blockquote><h3 id="6-4-测试连接"><a href="#6-4-测试连接" class="headerlink" title="6.4 测试连接"></a>6.4 测试连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现<code>Hi xxx! You&#39;ve successfully ...</code>内容即连接成功</p><hr><h1 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h1><h2 id="1-初始化Hexo项目"><a href="#1-初始化Hexo项目" class="headerlink" title="1 初始化Hexo项目"></a>1 初始化Hexo项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /g/AUBlog/AUkblmj</span><br><span class="line">hexo init my-blog//初始化项目</span><br><span class="line"><span class="built_in">cd</span> my-blog</span><br><span class="line">npm i//安装相关依赖</span><br><span class="line">hexo s//本地运行</span><br></pre></td></tr></table></figure><blockquote><p>项目结构如下：</p></blockquote><div class="table-container"><table><thead><tr><th>文件名</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td>node_modules</td><td style="text-align:left">依赖包</td></tr><tr><td>scaffolds</td><td style="text-align:left">生成文章的一些模板</td></tr><tr><td>source</td><td style="text-align:left">用来存放你的文章</td></tr><tr><td>themes</td><td style="text-align:left">主题</td></tr><tr><td>.npmignore</td><td style="text-align:left">发布时忽略的文件（可忽略）</td></tr><tr><td>_config.landscape.yml</td><td style="text-align:left">主题的配置文件</td></tr><tr><td>_config.yml</td><td style="text-align:left">博客的配置文件</td></tr><tr><td>package.json</td><td style="text-align:left">项目名称、描述、版本、运行和开发等信息</td></tr></tbody></table></div><hr><h2 id="2-将静态博客挂载到-GitHub-Pages"><a href="#2-将静态博客挂载到-GitHub-Pages" class="headerlink" title="2 将静态博客挂载到 GitHub Pages"></a>2 将静态博客挂载到 GitHub Pages</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save//安装hexo-deployer-git</span><br></pre></td></tr></table></figure><blockquote><p>修改<code>_config.yml</code>文件，建议使用vs code编辑</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:AUkblmj/AUkblmj.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><blockquote><p>部署到GitHub</p><p>注：之后修改文件，重新部署到GitHub均为此操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>如果出现<code>Deploy done</code>，则说明部署成功。</p><p>访问网址：<code>aukblmj.github.io</code></p><hr><h2 id="3-设置个人域名"><a href="#3-设置个人域名" class="headerlink" title="3 设置个人域名"></a>3 设置个人域名</h2><p>购买个人域名后，在域名云解析中添加解析记录</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://img.picui.cn/free/2024/08/20/66c4905b034cf.png"/></div></div><blockquote><p>这时候你的项目根目录应该会出现一个名为CNAME的文件。如果没有的话，打开my-blog/source目录，新建CNAME文件，注意没有后缀。然后在里面写上域名(例如：aukblmj.top)，保存。最后运行hexo g、hexo d上传到github。这样到最后当你在地址栏输入xxx.github.io时，才会自动跳转到你的域名。</p></blockquote><p>打开github博客项目，点击<code>settings</code>，点击<code>Pages</code>，拉到下面<code>Custom domain</code>处，填上你自己的域名 ，Save保存。</p><blockquote><p>注意：这一步之后每次重新部署可能都要操作一遍</p></blockquote><hr><h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><blockquote><p>本站使用<a href="[jerryc127/hexo-theme-butterfly: 🦋 A Hexo Theme: Butterfly (github.com">hexo-theme-butterfly</a>](<a href="https://github.com/jerryc127/hexo-theme-butterfly))主题">https://github.com/jerryc127/hexo-theme-butterfly))主题</a></p><p>Git安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>使用Git安装后续魔改时更改的文件都是<code>G:\AUBlog\AUkblmj\my-blog\themes\butterfly</code>文件夹中的文件</p><blockquote><p>升级方法：在主题目录下，运行git pull</p><p>安装渲染器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><blockquote><p>升级建议</p></blockquote><p>把主题文件夹中的 <code>_config.yml</code> 复制到 Hexo 根目录里，同时重新命名为 <code>_config.butterfly.yml</code>。</p><p>以后只需要在 <code>_config.butterfly.yml</code>进行配置就行。</p><p>Hexo会自动合併主题中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</p><hr><h1 id="基础页面配置"><a href="#基础页面配置" class="headerlink" title="基础页面配置"></a>基础页面配置</h1><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><blockquote><p>Front-matter 是 markdown 文件最上方以—-分隔的区域，用于指定个别档案的变数。</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">写法</th><th>解释</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td>【必需】页面标题</td></tr><tr><td style="text-align:left">date</td><td>【必需】页面创建日期</td></tr><tr><td style="text-align:left">type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:left">updated</td><td>【可选】页面更新日期</td></tr><tr><td style="text-align:left">description</td><td>【可选】页面描述</td></tr><tr><td style="text-align:left">keywords</td><td>【可选】页面关键字</td></tr><tr><td style="text-align:left">comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td style="text-align:left">top_img</td><td>【可选】页面顶部图片</td></tr><tr><td style="text-align:left">mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:left">katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:left">aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:left">aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td style="text-align:left">highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table></div><hr><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h2><p>1.前往Hexo博客根目录，打开cmd命令窗口执行<code>hexo new page tags</code>。</p><p>2.在【my-blog/source/】会生成一个含有index.md文件的tags文件夹。</p><p>3.修改【my-blog/source/tags/index.md】，添加<code>type: &quot;tags&quot;</code></p><hr><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h2><p>1.前往Hexo博客根目录，打开cmd命令窗口执行<code>hexo new page categories</code>。</p><p>2.在【my-blog/source/】会生成一个含有index.md文件的categories文件夹。</p><p>3.修改【my-blog/source/tags/index.md】，添加<code>type: &quot;categories&quot;</code></p><hr><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n 文章名称</span><br></pre></td></tr></table></figure><p>即会在<code>G:\AUBlog\AUkblmj\my-blog\source\_posts</code>中生成文章名称.md文件，可在其中书写文章内容</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
